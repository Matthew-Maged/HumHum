@using Domain.Entities.Identity
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <!-- ===============================================-->
    <!--    Document Title-->
    <!-- ===============================================-->
    <title>@ViewData["Title"] - My App</title>


    <!-- ===============================================-->
    <!--    Favicons-->
    <!-- ===============================================-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="apple-touch-icon" sizes="180x180" href="~/assets/img/favicons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/assets/img/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/assets/img/favicons/favicon-16x16.png">
    <link rel="shortcut icon" type="image/x-icon" href="~/assets/img/favicons/favicon.ico">
    <link rel="manifest" href="~/assets/img/favicons/manifest.json">
    <meta name="msapplication-TileImage" content="~/assets/img/favicons/mstile-150x150.png">
    <meta name="theme-color" content="#ffffff">


    <!-- ===============================================-->
    <!--    Stylesheets-->
    <!-- ===============================================-->
    <link href="~/assets/css/theme.css" rel="stylesheet" />

</head>
<body>
    
    <main class="main" id="top">

        <nav class="navbar navbar-expand-lg bg-dark fixed-top custom-nav"
             data-navbar-on-scroll="data-navbar-on-scroll">
            <div class="container-fluid align-items-center">
                <!-- Brand -->

                <a class="navbar-brand d-inline-flex align-items-center" href="@Url.Action("Index", "Home")">
                    <img class="d-inline-block" style="width:50px; height:50px;"
                    src="~/assets/img/HumHum_logo.jpg"
                    alt="logo" />
                    <span class="text-1000 fs-3 fw-bold ms-2 text-gradient">HumHum</span>
                </a>
                <!-- Toggler -->

                <button class="navbar-toggler"
                type="button"
                data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent"
                aria-expanded="false"
                aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"> </span>
                </button>
                <!-- Navbar content -->
                <div class="collapse navbar-collapse border-top border-lg-0 my-2 mt-lg-0"
                id="navbarSupportedContent">

                    <ul class="nav nav-pills me-auto mt-2 mb-lg-0 d-flex align-items-center">
                        @* <ul class="nav nav-pills navbar-nav me-auto mb-3 mb-lg-0 d-flex align-items-center"> *@


                        <li class="nav-item">
                            <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                            onclick="location.href='@Url.Action("Index", "Home")'">
                                Home
                            </button>
                        </li>

                        <li class="nav-item">
                            <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Privacy" ? "active" : "")"
                            onclick="location.href='@Url.Action("Privacy", "Home")'">
                                Privacy
                            </button>
                        </li>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Product" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                                onclick="location.href='@Url.Action("Index", "Product")'">
                                    Products
                                </button>
                            </li>

                            <li class="nav-item">
                                <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Restaurant" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                                onclick="location.href='@Url.Action("Index", "Restaurant")'">
                                    Restaurants
                                </button>
                            </li>

                            <li class="nav-item">
                                <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "ProductCategory" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                                onclick="location.href='@Url.Action("Index", "ProductCategory")'">
                                    Categories
                                </button>
                            </li>
                        }

                        @if (SignInManager.IsSignedIn(User) && User.IsInRole(Roles.Administrator))
                        {
                            <li class="nav-item">
                                <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" && ViewContext.RouteData.Values["action"]?.ToString() == "ManageRoles" ? "active" : "")"
                                onclick="location.href='@Url.Action("ManageRoles", "Admin")'">
                                    Manage
                                </button>
                            </li>
                        }

                    </ul>





                    <!-- Right side nav -->
                    <ul class="navbar-nav ms-auto">
                        @if (User.Identity.IsAuthenticated)
                        {
                            @* <li class="nav-item">
                                <span class="nav-link">Hello, @User.Identity.Name!</span>
                            </li> *@
                            <li class="nav-item">
                                <form asp-action="Logout" asp-controller="Account" method="post" class="form-inline">
                                    @* <button type="submit" class="btn btn-link nav-link">Logout</button> *@
                                    <button class="btn btn-white shadow-warning text-warning"
                                    type="submit">
                                        <i class="fas fa-sign-out-alt me-2"></i>
                                    </button>

                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <button class="btn btn-white shadow-warning text-warning"
                                type="submit" onclick="location.href='@Url.Action("Login", "Account")'">
                                    <i class="fas fa-user me-2"></i>Login
                                </button>
                                @* <button class="nav-link @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                                        onclick="location.href='@Url.Action("Index", "Home")'">
                                    Home
                                </button> *@
                                @*                                 <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
 *@                            </li>
                            <li class="nav-item">
                                @* <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a> *@
                                <button class="btn btn-white shadow-warning text-warning"
                                type="button"
                                onclick="location.href='@Url.Action("Register", "Account")'">
                                    <i class="fas fa-user-plus me-2"></i>Register
                                </button>
                            </li>





                            @* 
                            <button class="btn btn-white shadow-warning text-warning me-2"
                                    type="button"
                                    onclick="location.href='@Url.Action("Login", "Account")'">
                                <i class="fas fa-user me-2"></i>Login
                            </button> *@
                            

                        }
                        <button id="themeToggle" class="btn btn-primary mx-2" >
                            <i class="bi bi-moon-fill d-none"></i>
                            <i class="bi bi-sun-fill"></i>
                        </button>
                        
                    </ul>


                    
                </div>

            </div>
        </nav> 

        @if (User.Identity.IsAuthenticated)
        {
            <div class="container-fluid d-flex flex-column flex-lg-row align-items-center justify-content-evenly mt-6 w-100  pt-4 pb-2 bg-dark">
                <!-- Delivery Info -->
                <div class="text-center text-lg-start mb-2 mb-lg-0">
                    <p class="mb-0 fw-bold">
                        Deliver to:
                        <i class="fas fa-map-marker-alt text-warning mx-2"></i>
                        <span class="fw-normal">Current Location</span>
                        <span>Mirpur 1 Bus Stand, Dhaka</span>
                    </p>
                </div>

                <!-- Search Box -->
                <form class="d-flex align-items-center">
                    <div class="input-group-icon pe-2">
                        <i class="fas fa-search input-box-icon text-primary"></i>
                        <input class="form-control border-0 input-box bg-100 "
                        type="search"
                        placeholder="Search Food"
                        aria-label="Search" />
                    </div>
                </form>

            </div>
        }
        
        @RenderBody()
    </main>
    @if (!(ViewData["HideFooterAndFooter"] as bool? ?? false))
    {
        <footer>
            <p>&copy; 2025 - My App</p>
        </footer>
    }


    <!-- ===============================================-->
    <!--    JavaScripts-->
    <!-- ===============================================-->
    <script>
        // document.addEventListener('DOMContentLoaded', function() {
        //   const themeToggle = document.getElementById('themeToggle');
        //   const htmlElement = document.documentElement;

        //   // Initialize theme with class-based toggle
        //   const savedTheme = localStorage.getItem('theme') || 'light';
        //   htmlElement.setAttribute('data-bs-theme', savedTheme);

        //   // Set initial icon state
        //   const moonIcon = themeToggle.querySelector('.bi-moon-fill');
        //   const sunIcon = themeToggle.querySelector('.bi-sun-fill');
        //   moonIcon.classList.toggle('d-none', savedTheme === 'dark');
        //   sunIcon.classList.toggle('d-none', savedTheme !== 'dark');

        //   themeToggle.addEventListener('click', () => {
        //     const currentTheme = htmlElement.getAttribute('data-bs-theme');
        //     const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

        //     htmlElement.setAttribute('data-bs-theme', newTheme);
        //     localStorage.setItem('theme', newTheme);

        //     moonIcon.classList.toggle('d-none');
        //     sunIcon.classList.toggle('d-none');
        //   });
        // });

        //         const sr = ScrollReveal ({
        //     origin: 'top',
        //     distance: '40px',
        //     duration: 2000,
        //     reset: false
        // });
        //     sr.reveal(`img,
        //             .contact-box`, {
        //     interval: 200
        // })
        document.addEventListener('DOMContentLoaded', function() {
          const themeToggle = document.getElementById('themeToggle');
          const htmlElement = document.documentElement;

          // Initialize theme
          const savedTheme = localStorage.getItem('theme') || 'light';
          htmlElement.setAttribute('data-bs-theme', savedTheme);

          // Set initial icon state
          const moonIcon = themeToggle.querySelector('.bi-moon-fill');
          const sunIcon = themeToggle.querySelector('.bi-sun-fill');
          moonIcon.classList.toggle('d-none', savedTheme === 'dark');
          sunIcon.classList.toggle('d-none', savedTheme !== 'dark');

          themeToggle.addEventListener('click', () => {
            const currentTheme = htmlElement.getAttribute('data-bs-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

            htmlElement.setAttribute('data-bs-theme', newTheme);
            localStorage.setItem('theme', newTheme);

            moonIcon.classList.toggle('d-none');
            sunIcon.classList.toggle('d-none');
          });
        });


    </script>
    <script src="~/vendors/popperjs/popper.min.js"></script>
    <script src="~/vendors/bootstrap/bootstrap.min.js"></script>
    <script src="~/vendors/is/is.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=window.scroll"></script>
    <script src="~/vendors/fontawesome/all.min.js"></script>
    <script src="~/assets/js/theme.js"></script>

    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@200;300;400;600;700;900&amp;display=swap"
          rel="stylesheet" />
</body>
</html>