@model ProductToRestaurantWithQuantityViewModel

@for (int i = 0; i < Model.Products.Count; i++)
{
    <div class="col-sm-6 col-lg-4 mb-3 mb-md-0 h-100 pb-4">

        <div class="card card-span h-100 mx-2">
            <div class="position-relative">
                <img class="img-fluid rounded-3 w-100" style="height:250px;"
                     src="@Model.Products[i].Image"
                     alt="..." />
                <div class="d-flex justify-content-between align-items-end  card-actions">
                    <div class="badge badge-foodwagon bg-primary p-4">
                        <div class="d-flex flex-between-center">
                            <div class="text-white fs-3">@Model.Products[i].Price</div>
                            <div class="d-block text-white fs-2">
                                LE <br />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body px-0">
                <div class="d-flex justify-content-between">
                    <span class="badge bg-soft-danger py-2 px-3">
                        <span class="fs-1 text-danger">@Model.Products[i].Category</span>
                    </span>
                    <span class="badge bg-soft-warning py-2 px-3">
                        <span class="fs-1 text-warning">@Model.Products[i].Restaurant</span>
                    </span>
                </div>
                <div class="d-flex justify-content-between align-items-end ">
                    <h5 class="fw-bold text-1000 text-truncate mt-2">
                        @Model.Products[i].Name
                    </h5>
                    <!-- Star Rating -->
                    <div class="d-flex gap-1 p-2">
                        @{
                            double rate = @Model.Products[i].Rate;
                            int fullStars = (int)Math.Floor(rate);
                            bool hasHalfStar = (rate - fullStars) >= 0.5;
                            int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                        }
                        @for (int j = 0; j < fullStars; j++)
                        {
                            <i class="fas fa-star text-warning fs-1"></i>
                        }
                        @if (hasHalfStar)
                        {
                            <i class="fas fa-star-half-alt text-warning fs-1"></i>
                        }
                        @for (int j = 0; j < emptyStars; j++)
                        {
                            <i class="far fa-star text-warning fs-1"></i>
                        }
                    </div>
                    <!-- End Star Rating -->
                </div>
            </div>
        </div>

        @Html.Partial("_CartPlusMinusControl", Model, new ViewDataDictionary(ViewData) { ["index"] = i })


    </div>
}
<div class="d-flex justify-content-center mt-4">
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a href="#" class="page-link pagination-link" data-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>


